(define "CaptureToPiece"
    (apply 
        (remove 
            (to) 
        )
    ) 
)

(define "CaptureForwardDiagonal"
    (move
        Step 
        (directions {FR FL}) 
        (to 
            if:(is Enemy (who at:(to))) 
            (apply (remove (to)))
        )
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King_noCross" Next)))) )
)

//------------------------------------------------------------------------------

(game "Chaturanga" 
    (players {(player N) (player S)})  
    (equipment { 
        (board (square 8))
        
        (piece "Pawn" Each 
            (or 
                "StepForwardToEmpty" 
                "CaptureForwardDiagonal"
                (then
                    (if (is In (last To) (sites Mover "Promotion")) 
                        (moveAgain)
                    )
                )
            )
        )
        (piece "Rook" Each 
            (move
                Slide 
                Orthogonal 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPiece"
                ) 
            )
        )
        (piece "King_noCross" Each 
            (move
                Step 
                (to 
                    if:(or (is Empty (to)) (is Enemy (who at:(to)))) 
                    "CaptureToPiece" 
                )
            )
        )
        (piece "Elephant" Each <Elephant>) 
        (piece "Knight" Each 
            (move
                Leap 
                "KnightWalk" 
                (to 
                    if:(or (is Empty (to)) (is Enemy (who at:(to)))) 
                    "CaptureToPiece"
                ) 
            )
        )
        (piece "Ferz_noCross" Each 
            (move
                Step 
                Diagonal
                (to 
                    if:(or (is Empty (to)) (is Enemy (who at:(to)))) 
                    "CaptureToPiece" 
                )
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
        }
    )  
    (rules 
        (start
            { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"D1") (place "King_noCross1" coord:"E1") 
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"E8") (place "King_noCross2" coord:"D8") 
            }
        )
        
        (play 
            (if "SameTurn"
                (move Promote (last To) (piece "Ferz_noCross") Mover)
                (do (forEach Piece) ifAfterwards:(not ("IsInCheck" "King_noCross" Mover)))
            )
        )
        
        (end
            {
            (if (and 
                    ("IsInCheck" "King_noCross" Next)
                    ("NextCanNotMove")
                ) 
                (result Mover Win)
            ) 
            (if (no Moves Mover) (result Mover Win)) 
            (if (= (count Pieces Next) 1) (result Mover Win) ) 
            }
        )
    )
)

//------------------------------------------------------------------------------

(option "Play Rules" <Elephant> args:{ <move> }
    {
    (item "Elephant Move is Diagonal Jump"             
        <(move Hop Diagonal (between if:true) (to if:(or (is Empty (to)) (is Enemy (who at:(to)))) (apply (remove (to)))) )>    
        "The elephants can jump only diagonally."
    )   
    (item "Elephant Move is Orthogonal Jump"             
        <(move Hop Orthogonal (between if:true) (to if:(or (is Empty (to)) (is Enemy (who at:(to)))) (apply (remove (to)))) )>   
        "The elephants can jump only orthogonally."
    )     
    (item "Elephant Move is like a Silver in Shogi"             
        <(move Step (directions {Forward BL BR FL FR}) (to if:(or (is Empty (to)) (is Enemy (who at:(to)))) (apply (remove (to)))))>   
        "The elephants can move like a Silver in Shogi."
    )     
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Chaturanga is believed to be the earliest ancestor of Chess, Shogi, and many other similar games throughout the world. It is first documented in India, and the pieces (infantry, horses, elephants, and chariots) reflect the four divisions of the Indian army, who protect the counselor and king. Various Indian texts discuss the rules and problems, and it is also a popular theme in Indian art and literature.")
        (aliases {"Caturanga" "Catur"})
        (rules "Played on an 8x8 board. 8 Bhata (or Padati; move like Chess pawns but without being able to move two on the first turn); 2 Ashva (horses; move like Chess knights); 2 Gaja (elephants; can have three different moves: two squares diagonal in any direction, jumping over the first square, one step diagonal in any direction, or two squares in an orthogonal direction, skipping over the first square); 2 Ratha (chariots; moves like a rook in chess); 1 Mantri (counselor; moves one square diagonally in any direction); 1 Raja (king; moves one square in any direction). These are set up along one edge of the board: Ratha-Ashva-Gaja-Mantri-Raja-Gaja-Ashva-Ratha, with the eight Bhata lined up in the row in front of these, as in chess. Players take turns moving. When one piece lands on the space occupied by another piece, it is captured. Play continues until one player's king cannot move without being captured.")
        (source "Bock-Raming 1996.")
        (version "1.0.8")
        (classification "board/war/chaturanga")
        (credit "Eric Piette")
        (origin  "This game was played in India, from around 621CE to 1138CE.")
        }
    )
    
    (graphics {
        (piece Scale "Pawn" 0.825)
        (show Check "King")
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
        (board Colour Symbols (colour Black))
        (board Colour Phase0 (colour 222 173 123))
        (show Symbol "thinCross" {0 3 4 7 24 27 28 31 32 35 36 39 56 59 60 63} scale:0.9)
    })
    
    (ai 
        "Chaturanga_ai"
    )
    
)

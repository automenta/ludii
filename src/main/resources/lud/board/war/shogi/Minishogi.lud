(define "NextCannotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "Osho" Next))) ))
)

(define "CapturePiece"
    (apply 
        (if (is Enemy (who at:(to)))
            (add 
                (piece (mapEntry "Captured" (what at:(to)))) 
                (to (mapEntry "Where" (what at:(to))))
            )
        )
    )
)

(define "InPromotionZone"
    (is In #1 (sites Mover "Promotion") )	
)

(define "Promote"
    (promote (last To) (piece (mapEntry "Promoted" (what at:(last To)))))	
)

(define "ForcePromote"
    (then 
        (if 
            ("InPromotionZone" (last To)) 
            "Promote"
        )
    )
)

(define "CanPromote"
    (then 
        (if 
            (or ("InPromotionZone" (last To)) ("InPromotionZone" (last From)) ) 
            (moveAgain) 
        ) 
    )
)

(define "SlideMove"
    (move
        Slide
        #1 
        (to if:(is Enemy (who at:(to))) "CapturePiece")
        #2 
    )   	
)

(define "StepMove"
    (move
        Step
        #1
        (to if:(or (is Empty (to)) (is Enemy (who at:(to)))) "CapturePiece") 
        #2 
    )   	
)

(define "GoldMove" ("StepMove" (directions {Forward Backward Rightward Leftward FL FR})))

//------------------------------------------------------------------------------

(game "Minishogi"  
    (players {(player N) (player S)})  
    
    (equipment { 
        (board (square 5))
        
        // King
        (piece "Osho" Each ("StepMove"))
        
        //Pawn 
        (piece "Fuhyo" Each ("StepMove" Forward "ForcePromote"))
        
        // Silver General
        (piece "Ginsho" Each ("StepMove" (directions {Forward BL BR FL FR}) "CanPromote"))
        
        // Rook
        (piece "Hisha" Each ("SlideMove" Orthogonal "CanPromote"))
        
        // Bishop
        (piece "Kakugyo" Each ("SlideMove" Diagonal "CanPromote"))
        
        // Gold General
        (piece "Kinsho" Each "GoldMove")
        
        // Promoted Pawn
        (piece "Tokin" Each "GoldMove")
        
        // Promoted Silver
        (piece "Narigin" Each "GoldMove")
        
        // Promoted Rook
        (piece "Ryuo" Each (or ("SlideMove" Orthogonal) ("StepMove" Diagonal)))
        
        // Promoted Bishop
        (piece "Ryuma" Each (or ("SlideMove" Diagonal) ("StepMove" Orthogonal)))
        
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
        (map "Where" { 
            (pair (id "Fuhyo" P1) (handSite P2)) (pair (id "Fuhyo" P2) (handSite P1)) 
            (pair (id "Ginsho" P1) (handSite P2 1)) (pair (id "Ginsho" P2) (handSite P1 1)) 
            (pair (id "Hisha" P1) (handSite P2 2)) (pair (id "Hisha" P2) (handSite P1 2)) 
            (pair (id "Kakugyo" P1) (handSite P2 3)) (pair (id "Kakugyo" P2) (handSite P1 3)) 
            (pair (id "Kinsho" P1) (handSite P2 4)) (pair (id "Kinsho" P2) (handSite P1 4)) 
            (pair (id "Tokin" P1) (handSite P2)) (pair (id "Tokin" P2) (handSite P1)) 
            (pair (id "Narigin" P1) (handSite P2 1)) (pair (id "Narigin" P2) (handSite P1 1)) 
            (pair (id "Ryuo" P1) (handSite P2 2)) (pair (id "Ryuo" P2) (handSite P1 2)) 
            (pair (id "Ryuma" P1) (handSite P2 3)) (pair (id "Ryuma" P2) (handSite P1 3)) 
        })
        (map "Captured" { 
            (pair (id "Fuhyo" P1) (id "Fuhyo" P2)) (pair (id "Fuhyo" P2) (id "Fuhyo" P1)) 
            (pair (id "Ginsho" P1) (id "Ginsho" P2)) (pair (id "Ginsho" P2) (id "Ginsho" P1)) 
            (pair (id "Hisha" P1) (id "Hisha" P2)) (pair (id "Hisha" P2) (id "Hisha" P1)) 
            (pair (id "Kakugyo" P1) (id "Kakugyo" P2)) (pair (id "Kakugyo" P2) (id "Kakugyo" P1)) 
            (pair (id "Kinsho" P1) (id "Kinsho" P2)) (pair (id "Kinsho" P2) (id "Kinsho" P1)) 
            (pair (id "Tokin" P1) (id "Fuhyo" P2)) (pair (id "Tokin" P2) (id "Fuhyo" P1)) 
            (pair (id "Narigin" P1) (id "Ginsho" P2)) (pair (id "Narigin" P2) (id "Ginsho" P1)) 
            (pair (id "Ryuo" P1) (id "Hisha" P2)) (pair (id "Ryuo" P2) (id "Hisha" P1)) 
            (pair (id "Ryuma" P1) (id "Kakugyo" P2)) (pair (id "Ryuma" P2) (id "Kakugyo" P1)) 
        })
        (map "Promoted" { 
            (pair (id "Fuhyo" P1) (id "Tokin" P1)) (pair (id "Fuhyo" P2) (id "Tokin" P2)) 
            (pair (id "Ginsho" P1) (id "Narigin" P1)) (pair (id "Ginsho" P2) (id "Narigin" P2))  
            (pair (id "Hisha" P1) (id "Ryuo" P1)) (pair (id "Hisha" P2) (id "Ryuo" P2)) 
            (pair (id "Kakugyo" P1) (id "Ryuma" P1)) (pair (id "Kakugyo" P2) (id "Ryuma" P2)) 
        })
        
        (hand Each size:5)
    })
    
    (rules 
        (start { 
            (place "Osho1" coord:"A1") (place "Kinsho1" coord:"B1") (place "Ginsho1" coord:"C1") (place "Kakugyo1" coord:"D1") (place "Hisha1" coord:"E1") (place "Fuhyo1" coord:"A2")
            (place "Osho2" coord:"E5") (place "Kinsho2" coord:"D5") (place "Ginsho2" coord:"C5") (place "Kakugyo2" coord:"B5") (place "Hisha2" coord:"A5") (place "Fuhyo2" coord:"E4")
        })
        
        (play
            (if ("SameTurn")
                (or
                    ("Promote")
                    (move Pass)
                )
                (do 
                    (or {
                        (move 
                            (from (sites Occupied by:Mover container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"})) 
                            (to (sites Empty))
                        ) 
                        (do 
                            (move 
                                (from (sites Occupied by:Mover container:"Hand" component:"Fuhyo" )) 
                                (to (difference (sites Empty) (sites Mover "Promotion") )) 
                            ) 
                            ifAfterwards:(not ("IsInCheck" "Osho" Next))
                        )
                        (forEach Piece) 
                    })
                    ifAfterwards:(not ("IsInCheck" "Osho" Mover))
                )
            )
        )
        
        (end {
            (if (and ("IsInCheck" "Osho" Next) ("NextCannotMove")) (result Mover Win)) 
            (if (no Moves Next) (result Mover Win)) 
        })
    )
)

(metadata
    
    (info
        {
        (description "Minishogi was invented in 1970 by Shigenobu Kusumoto. It is a Shogi variant with fewer pieces nd played on a 5x5 board.")
        (rules "Osho(1): moves one space in any direction. Hisha(1): moves any number of spaces orthogonally. Kakugyo(1): moves any number of spaces diagonally. Kinsho(1): moves one square in any direction except diagonally backwards. Ginsho (1): moves one square diagonally or one square forward orthogonally. Fuhyo(9): moves one space forward. Pieces are promoted when reaching the opposite edge of the board. Pieces are captured when an opponent's piece moves to the space it occupies. Captured pieces are held and can re-enter the game under the control of the capturing player as their turn. Goal is to capture the other player's king.")
        (source "<a href=\"https://brainking.com/en/GameRules?tp=91\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />brainking</a>")
        (version "1.0.8")
        (classification "board/war/shogi")
        (author "Shigenobu Kusumoto")
        (credit "Eric Piette")
        (origin  "This game is from Japan, on 1970.")
        }
    )
    
    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour White))
        (piece Families {"Defined" "Study"})
        (board Style Shogi)
        (piece Reflect P2 vertical:true horizontal:true)
        (piece Colour "Tokin" strokeColour:(colour Red))
        (piece Colour "Narigin" strokeColour:(colour Red))
        (piece Colour "Ryuo" strokeColour:(colour Red))
        (piece Colour "Ryuma" strokeColour:(colour Red))
        (piece Colour "Narikei" strokeColour:(colour Red))
        (piece Colour "Narikyo" strokeColour:(colour Red))
        (piece ExtendName P2 piece:"Osho" "1")
    })
    
    (ai 
        "Minishogi_ai"
    )
    
)

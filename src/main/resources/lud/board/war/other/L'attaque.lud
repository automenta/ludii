(define "CaptureFlag" (trigger "FlagCaptured" (next)))

(define "FlagWasCaptured" (is Triggered "FlagCaptured" (next)))

(define "CapturePiecesAndMakeVisible"
    (and { 
        (fromTo (from) (to (mapEntry (what at:(from))))) 
        (fromTo (from (to)) (to (mapEntry (what at:(to))))) 
        (set Visible (mapEntry (what at:(from)))) 
        (set Visible (mapEntry (what at:(to))))
    })  
)

(define "CaptureDefenderAndMakeVisible"
    (and { 
        (fromTo (from (to)) (to (mapEntry (what at:(to))))) 
        (fromTo (from) (to)) 
        (set Visible (mapEntry (what at:(to)))) 
        (set Visible (to) Next)
    })  
)

(define "CaptureDefenderAndMoveAttackerAndMakeVisible"
    (and {
        (fromTo (from (to)) (to (mapEntry (what at:(to))))) 
        (fromTo (from) (to)) 
        (set Visible (mapEntry (what at:(to)))) 
        (set Visible (from) Next)
    }) 
)

(define "CaptureAttackerAndMakeVisible"
    (and {
        (fromTo (from) (to (mapEntry (what at:(from))))) 
        (set Visible (mapEntry (what at:(from)))) 
        (set Visible (to) Mover)
    }) 
)

(define "Capture" 
    (apply 
        (if (is Enemy (who at:(to)))
            (and
                (if (and 
                        
                        (!= (what at:(to)) (id "Bomb" Next)) 
                        (!= (what at:(to)) (id "Flag" Next))
                    )
                    (if (= (value Piece of:(what at:(to))) (value Piece of:(what at:(from))))
                        ("CapturePiecesAndMakeVisible")
                        (if (< (value Piece of:(what at:(to))) (value Piece of:(what at:(from))))
                            "CaptureDefenderAndMakeVisible"
                            (if (< (value Piece of:(what at:(from))) (value Piece of:(what at:(to))))
                                (if (and 
                                        (= (what at:(from)) (id "Spy" Mover)) 
                                        (= (what at:(to)) (id "Marshal" Next))
                                    )
                                    ("CaptureDefenderAndMoveAttackerAndMakeVisible")
                                    ("CaptureAttackerAndMakeVisible")
                                )
                            )
                        )
                    )
                    (if (= (what at:(to)) (id "Bomb" Next))
                        (if (= (what at:(from)) (id "Miner" Mover))
                            (and { 
                                (fromTo (from (to)) (to (mapEntry (what at:(to))))) 
                                (set Visible (mapEntry (what at:(to)))) 
                                (fromTo (from) (to)) 
                                (set Visible (from) Next) 
                            })
                            ("CaptureAttackerAndMakeVisible")
                        )
                        (if (= (what at:(to)) (id "Flag" Next))
                            (and 
                                ("CaptureFlag") 
                                (remove (to))
                            )
                        )
                    )
                )
                (note Mover "attacks" to:Next)
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "L'attaque"  
    (players 2)  
    
    (equipment { 
        (board 
            (hole 
                (hole 
                    (hole 
                        (rectangle 10 9)
                        (poly {{2 4} {2 6} {3 6} {3 4}})
                    )
                    (poly {{4 4} {4 6} {5 6} {5 4}})
                )
                (poly {{6 4} {6 6} {7 6} {7 4}})
            )
        ) 
        (hand Each size:12)
        
        (piece "Marshal" Each value:10)
        (piece "General" Each value:9)
        (piece "Colonel" Each value:8)
        (piece "Major" Each value:7)
        (piece "Captain" Each value:6)
        (piece "Lieutenant" Each value:5)
        (piece "Sergeant" Each value:4)
        (piece "Miner" Each value:3)
        (piece "Scout" Each value:2)
        (piece "Spy" Each value:1)
        (piece "Flag" Each)
        (piece "Bomb" Each)
        
        (regions "HomeP1" P1 (expand (sites Bottom) steps:3))
        (regions "HomeP2" P2 (expand (sites Top) steps:3))
        (map { (pair 1 84) (pair 2 96) (pair 3 85) (pair 4 97) (pair 5 86) (pair 6 98) (pair 7 87) (pair 8 99) (pair 9 88)
        (pair 10 100) (pair 11 89) (pair 12 101) (pair 13 90) (pair 14 102) (pair 15 91) (pair 16 103) (pair 17 92) (pair 18 104) (pair 19 93) (pair 20 105) (pair 21 94) (pair 22 106) (pair 23 95) (pair 24 107)})
        }
    )  
    
    (rules 
        (start { 
            (place "Marshal1" 84 invisibleTo:{P2}) (place "General1" 85 invisibleTo:{P2}) (place "Colonel1" 86 count:2 invisibleTo:{P2}) (place "Major1" 87 count:2 invisibleTo:{P2}) (place "Captain1" 88 count:4 invisibleTo:{P2})
            (place "Lieutenant1" 89 count:4 invisibleTo:{P2}) (place "Sergeant1" 90 count:4 invisibleTo:{P2}) (place "Miner1" 91 count:4 invisibleTo:{P2}) (place "Scout1" 92 count:8 invisibleTo:{P2}) (place "Spy1" 93 invisibleTo:{P2})
            (place "Flag1" 94 invisibleTo:{P2}) (place "Bomb1" 95 count:4 invisibleTo:{P2})
            
            (place "Marshal2" 96 invisibleTo:{P1}) (place "General2" 97 invisibleTo:{P1}) (place "Colonel2" 98 count:2 invisibleTo:{P1}) (place "Major2" 99 count:2 invisibleTo:{P1}) (place "Captain2" 100 count:4 invisibleTo:{P1})
            (place "Lieutenant2" 101 count:4 invisibleTo:{P1}) (place "Sergeant2" 102 count:4 invisibleTo:{P1}) (place "Miner2" 103 count:4 invisibleTo:{P1}) (place "Scout2" 104 count:8 invisibleTo:{P1}) (place "Spy2" 105 invisibleTo:{P1})
            (place "Flag2" 106 invisibleTo:{P1}) (place "Bomb2" 107 count:4 invisibleTo:{P1})
        })
        
        phases:{
        (phase "Placement" 
            (play 
                (move 
                    (from (sites Occupied by:Mover container:(mover))) 
                    (to 
                        (intersection 
                            (sites Mover "Home") 
                            (sites Empty)
                        )
                    ) 
                    (then 
                        (if 
                            ("HandEmpty" P2) 
                            (and 
                                (set Masked (sites P2 "Home") P1) 
                                (set Masked (sites P1 "Home") P2)
                            ) 
                        ) 
                    )
                )
            ) 
            (nextPhase ("HandEmpty" P2) "Movement")
        )
        (phase "Movement" (play
                (or 
                    (forEach Piece {"Marshal" "General" "Colonel" "Major" "Captain" "Lieutenant" "Sergeant" "Miner" "Spy"} 
                        (move
                            Step
                            Orthogonal 
                            (to 
                                if:(or (is Empty (to)) (is Enemy (who at:(to)))) 
                                "Capture"
                            )
                        )
                    )
                    (forEach Piece "Scout" 
                        (or
                            (move
                                Select
                                (from)
                                (to (sites LineOfSight Empty at:(from) Orthogonal))
                                (then (fromTo (from (last From)) (to (last To))))
                            )
                            (move
                                Select
                                (from)
                                (to 
                                    (sites LineOfSight Piece at:(from) Orthogonal)
                                    if:(is Enemy (who at:(to)))
                                )
                                (then   
                                    (and
                                        (if (and 
                                                (!= (what at:(last To)) (id "Bomb" Next)) 
                                                (!= (what at:(last To)) (id "Flag" Next))
                                            )
                                            (if (= (value Piece of:(what at:(last To))) (value Piece of:(what at:(last From))))
                                                (and
                                                    (set Visible (last To) Mover) 
                                                    (set Visible (last From) Next)
                                                )
                                                (if (< (value Piece of:(what at:(last To))) (value Piece of:(what at:(last From))))
                                                    (and { 
                                                        (fromTo (from (last To)) (to (mapEntry (what at:(last To))))) 
                                                        (fromTo (from (last From)) (to (last To))) 
                                                        (set Visible (mapEntry (what at:(last To)))) 
                                                        (set Visible (last To) Next)
                                                    })  
                                                    (and {
                                                        (fromTo (from (last From)) (to (mapEntry (what at:(last From))))) 
                                                        (set Visible (mapEntry (what at:(last From)))) 
                                                        (set Visible (last To) Mover)
                                                    }) 
                                                )
                                            )
                                            (if (= (what at:(last To)) (id "Bomb" Next))
                                                (and {
                                                    (fromTo (from (last From)) (to (mapEntry (what at:(last From))))) 
                                                    (set Visible (mapEntry (what at:(last From)))) 
                                                    (set Visible (last To) Mover)
                                                }) 
                                                (and {
                                                    ("CaptureFlag") 
                                                    (remove (last To))
                                                    (fromTo (from (last From)) (to (last To))) 
                                                    }
                                                )
                                            )
                                        )
                                        (note Mover "attacks" to:Next)
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (end (if "FlagWasCaptured" (result Mover Win))) 
        )
        }
        
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "L'attaque was designed by Hermance Edan in France in 1908, and was an early predecessor of Stratego.")
        (rules "Played on a board of 10x10 squares. The board has three 2x2 zones which cannot be entered, represented as water on the battlefield. each player controls 36 pieces which have individual army ranks. The goal is to capture the opponent's flag. Pieces can move only one space orthogonally. the Scout piece can move any number of spaces orthogonally. Pieces may attempt to capture an opposing piece; when doing so the ranks are revealed and the lower ranking piece is captured; if they are of equal rank they are both removed. There are bomb pieces which cannot move. Bombs eliminate other pieces attacking it and can only be removed by a miner. The spy can only attack the Marshall or the Flag. The scouts can not take each other, and winning is only possible in capturing the opponent flag")
        (source "<a href=\"https://boardgamegeek.com/image/3535261/lattaque\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />BGG</a>")
        (version "1.0.8")
        (classification "board/war")
        (credit "Eric Piette")
        }
    )
    
    (graphics {
        (show Piece Value)
        (player Colour P1 (colour Red))
        (player Colour P2 (colour Blue))
        (piece Scale 0.8)
        (piece Colour fillColour:(colour White))
        (piece Background P1 image:"square" fillColour:(colour Red))
        (piece Background P2 image:"square" fillColour:(colour Blue))
    })
    
    (ai 
        "L'attaque_ai"
    )
    
)
